// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: commons/protocs/Anouncement.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Anountcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Author  string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Anountcement) Reset() {
	*x = Anountcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anountcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anountcement) ProtoMessage() {}

func (x *Anountcement) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anountcement.ProtoReflect.Descriptor instead.
func (*Anountcement) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{0}
}

func (x *Anountcement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Anountcement) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Anountcement) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Anountcement) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PublishAnouncementReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anountcement *Anountcement `protobuf:"bytes,1,opt,name=anountcement,proto3" json:"anountcement,omitempty"`
}

func (x *PublishAnouncementReq) Reset() {
	*x = PublishAnouncementReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishAnouncementReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishAnouncementReq) ProtoMessage() {}

func (x *PublishAnouncementReq) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishAnouncementReq.ProtoReflect.Descriptor instead.
func (*PublishAnouncementReq) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{1}
}

func (x *PublishAnouncementReq) GetAnountcement() *Anountcement {
	if x != nil {
		return x.Anountcement
	}
	return nil
}

type PublishAnouncementRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PublishAnouncementRes) Reset() {
	*x = PublishAnouncementRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishAnouncementRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishAnouncementRes) ProtoMessage() {}

func (x *PublishAnouncementRes) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishAnouncementRes.ProtoReflect.Descriptor instead.
func (*PublishAnouncementRes) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{2}
}

func (x *PublishAnouncementRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAnouncementsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAnouncementsReq) Reset() {
	*x = GetAnouncementsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnouncementsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnouncementsReq) ProtoMessage() {}

func (x *GetAnouncementsReq) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnouncementsReq.ProtoReflect.Descriptor instead.
func (*GetAnouncementsReq) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{3}
}

type GetAnouncementsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Anountcement *Anountcement `protobuf:"bytes,1,opt,name=anountcement,proto3" json:"anountcement,omitempty"`
}

func (x *GetAnouncementsRes) Reset() {
	*x = GetAnouncementsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAnouncementsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnouncementsRes) ProtoMessage() {}

func (x *GetAnouncementsRes) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnouncementsRes.ProtoReflect.Descriptor instead.
func (*GetAnouncementsRes) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{4}
}

func (x *GetAnouncementsRes) GetAnountcement() *Anountcement {
	if x != nil {
		return x.Anountcement
	}
	return nil
}

type ConsumeAndSaveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConsumeAndSaveReq) Reset() {
	*x = ConsumeAndSaveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeAndSaveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeAndSaveReq) ProtoMessage() {}

func (x *ConsumeAndSaveReq) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeAndSaveReq.ProtoReflect.Descriptor instead.
func (*ConsumeAndSaveReq) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{5}
}

type ConsumeAndSaveRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ConsumeAndSaveRes) Reset() {
	*x = ConsumeAndSaveRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commons_protocs_Anouncement_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeAndSaveRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeAndSaveRes) ProtoMessage() {}

func (x *ConsumeAndSaveRes) ProtoReflect() protoreflect.Message {
	mi := &file_commons_protocs_Anouncement_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeAndSaveRes.ProtoReflect.Descriptor instead.
func (*ConsumeAndSaveRes) Descriptor() ([]byte, []int) {
	return file_commons_protocs_Anouncement_proto_rawDescGZIP(), []int{6}
}

func (x *ConsumeAndSaveRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_commons_protocs_Anouncement_proto protoreflect.FileDescriptor

var file_commons_protocs_Anouncement_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x73, 0x2f, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x22, 0x6a, 0x0a, 0x0c,
	0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x73, 0x2e, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c,
	0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x15,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x22, 0x4f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x6e, 0x6f,
	0x75, 0x6e, 0x74, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x2e, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x74,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x61, 0x6e, 0x6f, 0x75, 0x6e, 0x74, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41,
	0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x22, 0x2b, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x8c, 0x02, 0x0a, 0x13, 0x41, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x56,
	0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x73,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commons_protocs_Anouncement_proto_rawDescOnce sync.Once
	file_commons_protocs_Anouncement_proto_rawDescData = file_commons_protocs_Anouncement_proto_rawDesc
)

func file_commons_protocs_Anouncement_proto_rawDescGZIP() []byte {
	file_commons_protocs_Anouncement_proto_rawDescOnce.Do(func() {
		file_commons_protocs_Anouncement_proto_rawDescData = protoimpl.X.CompressGZIP(file_commons_protocs_Anouncement_proto_rawDescData)
	})
	return file_commons_protocs_Anouncement_proto_rawDescData
}

var file_commons_protocs_Anouncement_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_commons_protocs_Anouncement_proto_goTypes = []interface{}{
	(*Anountcement)(nil),          // 0: protocs.Anountcement
	(*PublishAnouncementReq)(nil), // 1: protocs.PublishAnouncementReq
	(*PublishAnouncementRes)(nil), // 2: protocs.PublishAnouncementRes
	(*GetAnouncementsReq)(nil),    // 3: protocs.GetAnouncementsReq
	(*GetAnouncementsRes)(nil),    // 4: protocs.GetAnouncementsRes
	(*ConsumeAndSaveReq)(nil),     // 5: protocs.ConsumeAndSaveReq
	(*ConsumeAndSaveRes)(nil),     // 6: protocs.ConsumeAndSaveRes
}
var file_commons_protocs_Anouncement_proto_depIdxs = []int32{
	0, // 0: protocs.PublishAnouncementReq.anountcement:type_name -> protocs.Anountcement
	0, // 1: protocs.GetAnouncementsRes.anountcement:type_name -> protocs.Anountcement
	1, // 2: protocs.AnouncementServices.PublishAnouncement:input_type -> protocs.PublishAnouncementReq
	3, // 3: protocs.AnouncementServices.GetAnouncements:input_type -> protocs.GetAnouncementsReq
	5, // 4: protocs.AnouncementServices.ConsumeAndSave:input_type -> protocs.ConsumeAndSaveReq
	2, // 5: protocs.AnouncementServices.PublishAnouncement:output_type -> protocs.PublishAnouncementRes
	4, // 6: protocs.AnouncementServices.GetAnouncements:output_type -> protocs.GetAnouncementsRes
	6, // 7: protocs.AnouncementServices.ConsumeAndSave:output_type -> protocs.ConsumeAndSaveRes
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_commons_protocs_Anouncement_proto_init() }
func file_commons_protocs_Anouncement_proto_init() {
	if File_commons_protocs_Anouncement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commons_protocs_Anouncement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Anountcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishAnouncementReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishAnouncementRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnouncementsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAnouncementsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeAndSaveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commons_protocs_Anouncement_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeAndSaveRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commons_protocs_Anouncement_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_commons_protocs_Anouncement_proto_goTypes,
		DependencyIndexes: file_commons_protocs_Anouncement_proto_depIdxs,
		MessageInfos:      file_commons_protocs_Anouncement_proto_msgTypes,
	}.Build()
	File_commons_protocs_Anouncement_proto = out.File
	file_commons_protocs_Anouncement_proto_rawDesc = nil
	file_commons_protocs_Anouncement_proto_goTypes = nil
	file_commons_protocs_Anouncement_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnouncementServicesClient is the client API for AnouncementServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnouncementServicesClient interface {
	PublishAnouncement(ctx context.Context, in *PublishAnouncementReq, opts ...grpc.CallOption) (*PublishAnouncementRes, error)
	GetAnouncements(ctx context.Context, in *GetAnouncementsReq, opts ...grpc.CallOption) (AnouncementServices_GetAnouncementsClient, error)
	ConsumeAndSave(ctx context.Context, in *ConsumeAndSaveReq, opts ...grpc.CallOption) (AnouncementServices_ConsumeAndSaveClient, error)
}

type anouncementServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewAnouncementServicesClient(cc grpc.ClientConnInterface) AnouncementServicesClient {
	return &anouncementServicesClient{cc}
}

func (c *anouncementServicesClient) PublishAnouncement(ctx context.Context, in *PublishAnouncementReq, opts ...grpc.CallOption) (*PublishAnouncementRes, error) {
	out := new(PublishAnouncementRes)
	err := c.cc.Invoke(ctx, "/protocs.AnouncementServices/PublishAnouncement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anouncementServicesClient) GetAnouncements(ctx context.Context, in *GetAnouncementsReq, opts ...grpc.CallOption) (AnouncementServices_GetAnouncementsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AnouncementServices_serviceDesc.Streams[0], "/protocs.AnouncementServices/GetAnouncements", opts...)
	if err != nil {
		return nil, err
	}
	x := &anouncementServicesGetAnouncementsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AnouncementServices_GetAnouncementsClient interface {
	Recv() (*GetAnouncementsRes, error)
	grpc.ClientStream
}

type anouncementServicesGetAnouncementsClient struct {
	grpc.ClientStream
}

func (x *anouncementServicesGetAnouncementsClient) Recv() (*GetAnouncementsRes, error) {
	m := new(GetAnouncementsRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *anouncementServicesClient) ConsumeAndSave(ctx context.Context, in *ConsumeAndSaveReq, opts ...grpc.CallOption) (AnouncementServices_ConsumeAndSaveClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AnouncementServices_serviceDesc.Streams[1], "/protocs.AnouncementServices/ConsumeAndSave", opts...)
	if err != nil {
		return nil, err
	}
	x := &anouncementServicesConsumeAndSaveClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AnouncementServices_ConsumeAndSaveClient interface {
	Recv() (*ConsumeAndSaveRes, error)
	grpc.ClientStream
}

type anouncementServicesConsumeAndSaveClient struct {
	grpc.ClientStream
}

func (x *anouncementServicesConsumeAndSaveClient) Recv() (*ConsumeAndSaveRes, error) {
	m := new(ConsumeAndSaveRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AnouncementServicesServer is the server API for AnouncementServices service.
type AnouncementServicesServer interface {
	PublishAnouncement(context.Context, *PublishAnouncementReq) (*PublishAnouncementRes, error)
	GetAnouncements(*GetAnouncementsReq, AnouncementServices_GetAnouncementsServer) error
	ConsumeAndSave(*ConsumeAndSaveReq, AnouncementServices_ConsumeAndSaveServer) error
}

// UnimplementedAnouncementServicesServer can be embedded to have forward compatible implementations.
type UnimplementedAnouncementServicesServer struct {
}

func (*UnimplementedAnouncementServicesServer) PublishAnouncement(context.Context, *PublishAnouncementReq) (*PublishAnouncementRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishAnouncement not implemented")
}
func (*UnimplementedAnouncementServicesServer) GetAnouncements(*GetAnouncementsReq, AnouncementServices_GetAnouncementsServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAnouncements not implemented")
}
func (*UnimplementedAnouncementServicesServer) ConsumeAndSave(*ConsumeAndSaveReq, AnouncementServices_ConsumeAndSaveServer) error {
	return status.Errorf(codes.Unimplemented, "method ConsumeAndSave not implemented")
}

func RegisterAnouncementServicesServer(s *grpc.Server, srv AnouncementServicesServer) {
	s.RegisterService(&_AnouncementServices_serviceDesc, srv)
}

func _AnouncementServices_PublishAnouncement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishAnouncementReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnouncementServicesServer).PublishAnouncement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocs.AnouncementServices/PublishAnouncement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnouncementServicesServer).PublishAnouncement(ctx, req.(*PublishAnouncementReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnouncementServices_GetAnouncements_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetAnouncementsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AnouncementServicesServer).GetAnouncements(m, &anouncementServicesGetAnouncementsServer{stream})
}

type AnouncementServices_GetAnouncementsServer interface {
	Send(*GetAnouncementsRes) error
	grpc.ServerStream
}

type anouncementServicesGetAnouncementsServer struct {
	grpc.ServerStream
}

func (x *anouncementServicesGetAnouncementsServer) Send(m *GetAnouncementsRes) error {
	return x.ServerStream.SendMsg(m)
}

func _AnouncementServices_ConsumeAndSave_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ConsumeAndSaveReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AnouncementServicesServer).ConsumeAndSave(m, &anouncementServicesConsumeAndSaveServer{stream})
}

type AnouncementServices_ConsumeAndSaveServer interface {
	Send(*ConsumeAndSaveRes) error
	grpc.ServerStream
}

type anouncementServicesConsumeAndSaveServer struct {
	grpc.ServerStream
}

func (x *anouncementServicesConsumeAndSaveServer) Send(m *ConsumeAndSaveRes) error {
	return x.ServerStream.SendMsg(m)
}

var _AnouncementServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocs.AnouncementServices",
	HandlerType: (*AnouncementServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishAnouncement",
			Handler:    _AnouncementServices_PublishAnouncement_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAnouncements",
			Handler:       _AnouncementServices_GetAnouncements_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ConsumeAndSave",
			Handler:       _AnouncementServices_ConsumeAndSave_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "commons/protocs/Anouncement.proto",
}
